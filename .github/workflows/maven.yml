name: upload release asset

on:
  push:
    tag:
      - "v*"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Create Release File To Upload
        id: create_release_file
        env:
          RELEASE_VERSION: ${{github.ref}}
        run: |
          git clone https://github.com/rackshift/rackshift-installer.git
          cd rackshift-installer
          rm -rf docker .git
          cd ..
          echo $RELEASE_VERSION
          chmod +x rackshift-installer/installer/install.sh
          version=`$RELEASE_VERSION | tr 'a-z' 'A-Z' | tr -d 'REFS/TAGS/'`
          echo version:+++++++++ $version +++++++++
          filename=rackshift-releaseV$version
          mv rackshift-installer $filename
          tar -czvf rackshift-releaseV$filename.tar.gz $filename
          core.setOutput('VERSION', version);

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            Changes in this Release
            - First Change
            - Second Change

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./rackshift-releaseV${{ steps.create_release_file.outputs.VERSION }}.tar.gz
          asset_name: rackshift-releaseV${{ steps.create_release_file.outputs.VERSION }}.tar.gz
          asset_content_type: application/zip

      - name: Upload Quick Start Script
        id: upload-release-quick-start-shell
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./rackshift-releaseV${{ steps.create_release_file.outputs.VERSION }}/installer/quick_start.sh
          asset_name: quick_start.sh
          asset_content_type: application/text
