# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: build rackshift image with maven & node & upload release asset

on:
  push:
    branch:
      - "master"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
#      - name: Create Release
      #        id: create_release
      #        uses: actions/create-release@v1
      #        env:
      #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #        with:
      #          tag_name: ${{ github.ref }}
      #          release_name: ${{ github.ref }}
      #          draft: false
      #          prerelease: false
      #          body: |
      #            Changes in this Release
      #            - First Change
      #            - Second Change

      - name: git-bash
        uses: pkg-src/github-action-git-bash@v1.1
        run: |
          echo ${{github.ref}} > 1.txt
          cat 1.txt | tr 'a-z' 'A-Z' | tr -d 'REFS/TAGS/' > 1.txt
#            mv rackshift-installer rackshift`cat 1.txt | tr 'a-z' 'A-Z' | tr -d 'REFS/TAGS/'`
#            cd rackshift`cat 1.txt | tr 'a-z' 'A-Z' | tr -d 'REFS/TAGS/'`
#            rm -rf docker
#            chmod +x ./installer/install.sh
#            cd ..
#            tar -czvf rackshift`cat 1.txt | tr 'a-z' 'A-Z' | tr -d 'REFS/TAGS/'`.tar.gz rackshift`cat 1.txt | tr 'a-z' 'A-Z' | tr -d 'REFS/TAGS/'`
#            echo `ls`
#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#          asset_path: ./rackshiftV1.2.9.tar.gz
#          asset_name: rackshiftV1.2.9.tar.gz
#          asset_content_type: application/zip
#
#      - name: Upload Quick Start Shell
#        id: upload-release-quick-start-shell
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#          asset_path: ./rackshiftV1.2.9/installer/quick_start.sh
#          asset_name: quick_start.sh
#          asset_content_type: application/text
